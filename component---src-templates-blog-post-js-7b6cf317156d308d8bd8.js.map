{"version":3,"sources":["webpack:///./node_modules/_gatsby-plugin-mdx@1.1.0@gatsby-plugin-mdx/mdx-renderer.js","webpack:///./src/components/blogLayout.js","webpack:///./src/templates/blog-post.js"],"names":["React","require","useMDXComponents","mdx","useMDXScope","module","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","Object","values","key","fn","Layout","Header","className","style","marginLeft","marginRight","maxWidth","padding","rhythm","Date","getFullYear","href","BlogPostTemplate","data","pageContext","post","location","previous","next","title","frontmatter","description","excerpt","marginTop","marginBottom","scale","display","date","body","flexWrap","justifyContent","listStyle","to","fields","slug","rel","pageQuery"],"mappings":"8uEAAA,IAAMA,EAAQC,EAAd,Q,EACkCA,EAAQ,QAAlCC,E,EAAAA,iBAAkBC,E,EAAAA,IAClBC,EAAgBH,EAAQ,QAAxBG,YAERC,UAAiB,SAAqB,GAKlC,IAJFC,EAIC,EAJDA,MACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,SACGC,E,oIACF,sCACKC,EAAgBR,EAAtB,GACMS,EAAWP,EAFhB,GAKKQ,EAAMZ,EAAA,SAAc,WACxB,MACE,OAAO,KAGT,IAAMa,EAAS,GAGbb,MAHa,EAIbG,OAJF,GAQMW,EAAOC,YAAb,GACMC,EAASF,EAAA,KAAS,SAAAG,GAAG,OAAIJ,EAAJ,MAG3B,OAFQ,mCAAR,KAEOK,2BAAP,OACC,CAACV,EAlBJ,IAoBA,OAAOR,EAAA,mBAA2BO,WAAYG,GAA9C,M,4MCIaS,EAzBA,SAAC,GAAkB,IAAhBX,EAAe,EAAfA,SAChB,OACE,6BACE,kBAACY,EAAA,EAAD,MACA,yBACEC,UAAU,YACVC,MAAO,CACLC,WAAW,OACXC,YAAY,OACZC,SAAU,IACVC,QAAYC,YAAO,IAAZ,IAAmBA,YAAO,EAAI,KAIvC,8BAAOnB,GACP,sCACK,IAAIoB,MAAOC,cADhB,mBAGE,uBAAGC,KAAK,yBAAR,W,wtBCiDKC,UAxEU,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAC1BC,GADsD,EAAfC,SAChCH,EAAK7B,KAEViC,EAAmBH,EAAnBG,SAAUC,EAASJ,EAATI,KAClB,OACE,kBAAC,EAAD,CAAQhB,UAAU,gBAChB,kBAAC,IAAD,CACEiB,MAAOJ,EAAKK,YAAYD,MACxBE,YAAaN,EAAKK,YAAYC,aAAeN,EAAKO,UAEpD,iCACE,gCACE,wBACEnB,MAAO,CACLoB,UAAWf,YAAO,GAClBgB,aAAc,IAGfT,EAAKK,YAAYD,OAEpB,uBACEhB,MAAK,KACAsB,aAAM,IADN,CAEHC,QAAQ,QACRF,aAAchB,YAAO,OAGtBO,EAAKK,YAAYO,OAGrB,kBAAC,IAAD,KAAcZ,EAAKa,MAEpB,wBACEzB,MAAO,CACLqB,aAAchB,YAAO,MAGzB,kCAKF,6BACE,wBACEL,MAAO,CACLuB,QAAQ,OACRG,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVxB,QAAS,IAGX,4BACGU,GACC,kBAAC,OAAD,CAAMe,GAAIf,EAASgB,OAAOC,KAAMC,IAAI,QAApC,KACKlB,EAASG,YAAYD,QAI9B,4BACGD,GACC,kBAAC,OAAD,CAAMc,GAAId,EAAKe,OAAOC,KAAMC,IAAI,QAC7BjB,EAAKE,YAAYD,MADpB,WA7Dd,IA0EaiB,EAAS","file":"component---src-templates-blog-post-js-7b6cf317156d308d8bd8.js","sourcesContent":["const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n","/*\r\n * @Author: konglingyuan\r\n * @Description: A Vue/React Project File\r\n * @Date: 2020-03-22 08:36:06\r\n * @LastEditors: konglingyuan\r\n * @LastEditTime: 2020-04-07 14:19:53\r\n */\r\nimport React from \"react\"\r\n// import { Link } from \"gatsby\"\r\n\r\nimport { rhythm } from \"../utils/typography\"\r\nimport Header from './Header/index'\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <div>\r\n      <Header/>\r\n      <div\r\n        className=\"blog-page\"\r\n        style={{\r\n          marginLeft: `auto`,\r\n          marginRight: `auto`,\r\n          maxWidth: 900,//rhythm(34),\r\n          padding: `${rhythm(.5)} ${rhythm(3 / 4)}`,\r\n        }}\r\n      >\r\n        \r\n        <main>{children}</main>\r\n        <footer>\r\n          © {new Date().getFullYear()}, Built with\r\n          {` `}\r\n          <a href=\"https://www.vis27.com\">彩色说</a>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/blogLayout\"\r\nimport SEO from \"../components/seo\"\r\nimport { rhythm, scale } from \"../utils/typography\"\r\nimport MDXRenderer from 'gatsby-plugin-mdx/mdx-renderer';\r\n\r\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\r\n  const post = data.mdx\r\n  // const siteTitle = data.site.siteMetadata.title\r\n  const { previous, next } = pageContext\r\n  return (\r\n    <Layout className=\"blog-content\">\r\n      <SEO\r\n        title={post.frontmatter.title}\r\n        description={post.frontmatter.description || post.excerpt}\r\n      />\r\n      <article>\r\n        <header>\r\n          <h1\r\n            style={{\r\n              marginTop: rhythm(1),\r\n              marginBottom: 0,\r\n            }}\r\n          >\r\n            {post.frontmatter.title}\r\n          </h1>\r\n          <p\r\n            style={{\r\n              ...scale(-1 / 5),\r\n              display: `block`,\r\n              marginBottom: rhythm(0.6),\r\n            }}\r\n          >\r\n            {post.frontmatter.date}\r\n          </p>\r\n        </header>\r\n         <MDXRenderer>{post.body}</MDXRenderer>\r\n        {/* <section dangerouslySetInnerHTML={{ __html: post.html }} /> */}\r\n        <hr\r\n          style={{\r\n            marginBottom: rhythm(1),\r\n          }}\r\n        />\r\n        <footer>\r\n          \r\n        </footer>\r\n      </article>\r\n\r\n      <nav>\r\n        <ul\r\n          style={{\r\n            display: `flex`,\r\n            flexWrap: `wrap`,\r\n            justifyContent: `space-between`,\r\n            listStyle: `none`,\r\n            padding: 0,\r\n          }}\r\n        >\r\n          <li>\r\n            {previous && (\r\n              <Link to={previous.fields.slug} rel=\"prev\">\r\n                ← {previous.frontmatter.title}\r\n              </Link>\r\n            )}\r\n          </li>\r\n          <li>\r\n            {next && (\r\n              <Link to={next.fields.slug} rel=\"next\">\r\n                {next.frontmatter.title} →\r\n              </Link>\r\n            )}\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug($slug: String!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    mdx(fields: { slug: { eq: $slug } }) {\r\n      id\r\n      excerpt(pruneLength: 160)\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MM月DD日, YYYY\")\r\n        description\r\n      }\r\n      body\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}